input {
  beats {
    port => 5044
  }
  file {
    path => "/var/log/auth.log"
    type => "ssh-logs"
    start_position => "beginning"
  }
  file {
    path => "/var/log/audit/audit.log"
    type => "audit-logs"
    start_position => "beginning"
  }
  file {
    path => "/var/log/syslog"
    type => "system-logs"
    start_position => "beginning"
  }
  file {
    path => "/var/log/fail2ban.log"
    type => "fail2ban-logs"
    start_position => "beginning"
  }
}

filter {
  if [type] == "ssh-logs" {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:timestamp} %{SYSLOGHOST:hostname} sshd\[%{POSINT:pid}\]: %{GREEDYDATA:message}" }
    }
    date {
      match => [ "timestamp", "MMM dd HH:mm:ss" ]
      target => "@timestamp"
    }
  }

  if [type] == "audit-logs" {
    grok {
      match => { "message" => "type=%{WORD:audit_type} msg=audit\(%{NUMBER:timestamp}:%{NUMBER:serial}\): %{GREEDYDATA:message}" }
    }
    date {
      match => [ "timestamp", "UNIX" ]
      target => "@timestamp"
    }
  }

  if [type] == "fail2ban-logs" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} %{GREEDYDATA:message}" }
    }
    date {
      match => [ "timestamp", "ISO8601" ]
      target => "@timestamp"
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    user => "elastic"
    password => "${ELASTIC_PASSWORD}"
    ssl_enabled => true
    ssl_certificate_verification => true
    index => "security-logs-%{+YYYY.MM.dd}"
  }
}
