name: Security Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 1' # Weekly on Monday at 00:00

jobs:
  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: python
        config-file: ./.github/codeql-config.yml

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  dependency-vulnerability-scan:
    name: Dependency Vulnerability Scan
    if: github.event_name == 'pull_request' || github.event_name == 'schedule'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run dependency vulnerability scan
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: critical
          comment-summary-in-pr: always
          warn-only: true
          
  trufflehog-scan:
    name: TruffleHog Secret Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run TruffleHog secret scan on PR/Push
        if: github.event_name != 'schedule' && github.event.before != '0000000000000000000000000000000000000000'
        uses: trufflesecurity/trufflehog@main
        with:
          path: .
          base: ${{ github.event.before }}
          head: ${{ github.sha }}
          extra_args: --debug --json
          
      - name: Run TruffleHog secret scan on Schedule or first push
        if: github.event_name == 'schedule' || (github.event_name == 'push' && github.event.before == '0000000000000000000000000000000000000000')
        uses: trufflesecurity/trufflehog@main
        with:
          path: .
          extra_args: --debug --json

  shellcheck-scan:
    name: ShellCheck Script Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master
        with:
          severity: warning
          scandir: '.'
          format: gcc
          additional_files: '*.sh'
          
  report:
    name: Security Report
    if: always()
    runs-on: ubuntu-latest
    needs: [codeql-analysis, dependency-vulnerability-scan, trufflehog-scan, shellcheck-scan]
    steps:
      - name: Generate Security Dashboard
        run: |
          echo "Security Scan Report" > security-report.md
          echo "====================" >> security-report.md
          echo "Generated: $(date)" >> security-report.md
          echo "" >> security-report.md
          echo "### CodeQL Analysis" >> security-report.md
          if [[ ${{ needs.codeql-analysis.result }} == 'success' ]]; then
            echo "✅ CodeQL analysis completed successfully." >> security-report.md
          else
            echo "❌ CodeQL analysis failed or found issues." >> security-report.md
          fi
          echo "" >> security-report.md
          echo "### Dependency Vulnerability Scan" >> security-report.md
          if [[ ${{ needs.dependency-vulnerability-scan.result }} == 'success' ]]; then
            echo "✅ Dependency vulnerability scan completed successfully." >> security-report.md
          else
            echo "❌ Dependency vulnerability scan failed or found issues." >> security-report.md
          fi
          echo "" >> security-report.md
          echo "### TruffleHog Secret Scan" >> security-report.md
          if [[ ${{ needs.trufflehog-scan.result }} == 'success' ]]; then
            echo "✅ TruffleHog secret scan completed successfully." >> security-report.md
          else
            echo "❌ TruffleHog secret scan failed or found issues." >> security-report.md
          fi
          echo "" >> security-report.md
          echo "### ShellCheck Script Analysis" >> security-report.md
          if [[ ${{ needs.shellcheck-scan.result }} == 'success' ]]; then
            echo "✅ ShellCheck script analysis completed successfully." >> security-report.md
          else
            echo "❌ ShellCheck script analysis failed or found issues." >> security-report.md
          fi

      - name: Upload Security Report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: security-report.md
